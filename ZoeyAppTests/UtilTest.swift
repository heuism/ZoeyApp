//
//  UtilTest.swift
//  ZoeyApp
//
//  Created by Hien Tran on 1/2/17.
//  Copyright Â© 2017 Hien Tran. All rights reserved.
//

import XCTest
@testable import ZoeyApp

protocol Numberic{}

extension Float: Numberic{}

extension Int: Numberic{}

extension Double: Numberic{}

extension Double {
    /// Rounds the double to decimal places value
    func roundTo(places:Int) -> Double {
        let divisor = pow(10.0, Double(places))
        return (self * divisor).rounded() / divisor
    }
}


class UtilTest: XCTestCase {

    let util = Util()
    let filter = FilterZoey(frequency: 1,sampleRate: 50, passType: FilterZoey.PassType.Highpass,resonance: 1)

    override func setUp() {
        super.setUp()
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }
    
    override func tearDown() {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
        super.tearDown()
    }
    
    func testGetMS() {
        
        let arr = [1.0, 2.0, 3.0, 4.0, 5.0]
        
        let result = 11.0
        
        XCTAssertEqual(util.getMS(array: arr), result)
        
    }
    
    func testInitVect() {
        let result = [1.0, 1.0, 1.0, 1.0]
        
        XCTAssertEqual(util.initFeatVec(count: 4, val: 1.0) as! [Double], result)
    }

    func testAvgAxisValue() {
        let axisVals = [[1.0, 2.0, 3.0],[2.0, 3.0, 4.0],[3.0, 4.0, 5.0],[4.0, 5.0, 6.0]]
        
        let result = [2.5, 3.5, 4.5]
        
        XCTAssertEqual(util.avgAxisValue(data: axisVals), result)
    }
//    
    func testRootMeanSquareAxisVals() {
        let axisVals = [[1.0, 2.0, 3.0],[2.0, 3.0, 4.0],[3.0, 4.0, 5.0],[4.0, 5.0, 6.0]]
        
        let result = [(sqrt(30)/2).roundTo(places: 4), (sqrt(54)/2).roundTo(places: 4), (sqrt(86)/2).roundTo(places: 4)]
        
        XCTAssertEqual(util.rootMeanSquareAxisVals(data: axisVals), result)
    }
//    
    func testCombineToFeatures() {
        let accels: [[Double]] = [
            [1.0, 2.0, 3.0, 4.0],
            [2.0, 3.0, 4.0, 5.0],
            [3.0, 4.0, 5.0, 6.0],
            [4.0, 5.0, 6.0, 7.0],
            [5.0, 6.0, 7.0, 8.0]
        ]
        
        let gyros: [[Double]] = [
            [5.0, 6.0, 7.0, 8.0],
            [6.0, 7.0, 8.0, 9.0],
            [7.0, 8.0, 9.0, 10.0],
            [8.0, 9.0, 10.0, 11.0]
        ]
        
        let combineArray: [[Double]] = [
            [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0],
            [2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0],
            [3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
            [4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0]
        ]
        
        let a2DTest = util.combineToFeatures(accels: accels, gyros: gyros)
        
        for i in 0..<combineArray.count {
            XCTAssertEqual(a2DTest[i], combineArray[i], "This is the result of combine")
        }
        
    }
    
    func testClassificationAIToolbox() {
        util.classificationAIToolbox()
    }
    
    func testRegressionAIToolbox() {
        util.regressionAIToolbox()
    }
    
    func testHighpassFilter() {
//        var filter = FilterZoey(frequency: 1,sampleRate: 50, passType: FilterZoey.PassType.Highpass,resonance: 1)
        var array = [-0.908, -0.911, -0.908,  -0.64, -0.917, -1.037, -0.913, -1.021, -0.908, -0.823, -0.91, -1.189, -0.908, -1.524, -0.909, -1.448, -0.91, -1.143, -0.917]
        var filteredArr = Array(repeating: 0.0, count: array.count)
        
        for i in 0..<array.count {
            filter.updateValue(newInput: array[i])
            filteredArr[i] = filter.getValue()
        }
       print("The array afater filter is: \(filteredArr)");
    }
    
    func testTranspose() {
        let combineArray: [[Double]] = [
            [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0],
            [2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0],
            [3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
            [4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0]
        ]
        
        print(util.transpose(input: combineArray))
        
    }
    
    func testextractFeatures() {
        let combineArray: [[Double]] = [
            [1.0, 2.0, 3.0],
            [2.0, 3.0, 4.0],
            [3.0, 4.0, 5.0],
            [4.0, 5.0, 6.0],
            [5.0, 6.0, 7.0]
        ]
        
        print("This is the value of Extraction: \(util.extractFeatures(data : combineArray, frequency: 1.0, sampleRate: 50))")
    }
    
    func testApplyMachineLearning(){
        let trainingData = [
            //HeelSlide
            [0.279529832935561,-0.642899761336515,0.617250596658711,0.0344091681322862,0.0842043381366493,0.0359120012168738,0.0534830097087347,-0.936094660194174,-0.619968446601941,3.55473608770521,5.18479399513082,1.6144847367666],
            [0.23791135734072,-0.674950138504155,0.597451523545706,0.0424373663098682,0.097329448144813,0.0547548654174175,1.99685628742515,-1.38750598802395,-1.1262005988024,7.55084856629791,9.3404758513821,3.21538465414997],
            [0.277317708333334,-0.598236979166667,0.675541666666667,0.0347351478242076,0.0874918604275545,0.039140405991779,1.933317679558,-1.32773756906077,-0.671834254143647,3.71047983376943,5.64313797169138,1.54984138239382],
            [0.285351485148515,-0.625277227722772,0.639918316831683,0.0363824905583572,0.0863729599020757,0.0393435629664288,-0.33229230769231,-0.796871794871796,-0.361017948717949,4.80222173703635,5.19259968841528,2.24818007297859],
            [0.316193277310924,-0.639327731092437,0.593820728291317,0.0376908217316602,0.0965938426680514,0.0328368233808498,1.61573887240357,-2.09055192878338,-0.963922848664688,3.56134311687957,5.8125861825955,2.23035268063495],
            [0.275991825613079,-0.674569482288828,0.578294277929155,0.042109647983524,0.092666475492123,0.0445390632547949,1.45130320699709,-0.746527696793003,-1.0118221574344,4.72888638510548,8.36561696372712,1.91679329408993],
            [0.258,-0.673777777777778,0.607869565217391,0.0329003930118213,0.088160485827296,0.0348822432963463,0.577501291989664,-1.43303617571059,-0.971878552971577,4.75251827910537,5.58439950295001,1.4170566163744],
            [0.29579792746114,-0.653088082901555,0.602818652849741,0.0366595185897446,0.0896458571870425,0.0353017707171424,1.20701108033241,-1.12415512465374,-0.850836565096953,4.14185561285274,6.624679486743,1.66812514525566],
            [0.277654627539503,-0.674611738148985,0.588460496613996,0.031768161199544,0.0835648382700397,0.033330939568227,0.962956416464891,-1.28605811138015,-0.48356416464891,4.26822272577785,4.67338924225185,1.28175371384399],
            [0.27995652173913,-0.702267391304348,0.56285652173913,0.0333197764748257,0.0826278535879887,0.031065185205848,1.87443648960739,-0.886498845265588,-0.832778290993071,3.8618972617857,4.61321401239675,1.86824389507728],
            //HipAb
            [0.440954954954955,-0.883765765765765,-0.225576576576576,0.12039042412121,0.24001763839322,0.0925672464242843,-3.31320560747664,-1.67870093457945,1.03230841121495,16.1059126869849,12.7913878286545,17.5653719915885],
            [0.284075862068965,-0.949551724137931,-0.226503448275862,0.0887341166599642,0.179360154807088,0.0810868609972518,0.228866197183096,-3.19961267605634,-0.711091549295777,16.9629028122627,13.6195433172594,14.5041919151317],
            [0.303433823529412,-0.946058823529412,-0.259463235294118,0.157154908202205,0.225127950323215,0.0978313988426044,-0.689174242424241,-1.95364393939394,0.371742424242431,20.9150887941803,14.6853288857599,18.2688192083165],
            [0.304574468085106,-0.940872340425532,-0.253517730496454,0.105140687015599,0.193301934649144,0.0786574023697333,0.573463235294113,-1.80381617647059,0.103889705882349,22.0388403020896,12.781708040465,18.1929355001595],
            [0.325437908496732,-0.922104575163399,-0.245039215686274,0.091160317896236,0.178061490169658,0.0615729482207117,-2.22590604026846,-1.28795302013423,1.4680134228188,15.1678178098218,10.9077991546914,12.0881323856646],
            [0.336484848484849,-0.931030303030303,-0.248598484848485,0.0998810739095573,0.1699128333797,0.0702776061407987,1.08664566929134,-0.494992125984251,-1.35789763779527,17.7765022498594,13.0041167514982,15.2809632215416],
            [0.309962686567164,-0.935985074626865,-0.266402985074627,0.107230939539651,0.199145305503624,0.0802314574862831,0.090615384615377,-3.48257692307692,-0.496361538461538,15.9114643562895,13.8460782741911,13.1955877939323],
            [0.306929032258064,-0.937793548387098,-0.243903225806452,0.113177084667959,0.180683548056001,0.0745525851830615,-0.848868421052635,-1.77773026315789,1.31004605263158,19.6639637594037,11.300463502125,18.9889265074776],
            [0.320422222222222,-0.94177037037037,-0.247985185185185,0.11891118236541,0.194218261930311,0.0940834160961762,-0.575196969696967,-2.37864393939394,1.74484848484848,20.4523686169553,12.7356814231601,18.9971756727561],
            [0.153456140350877,-0.923166666666667,-0.379964912280702,0.0440256980429756,0.165424445225651,0.0625485116247556,-3.94249074074074,-1.12328703703704,-0.44687037037037,14.0125637094635,10.5814326026003,3.46259540067982],
            //HipEx
            [0.157614035087719,-0.860312865497076,-0.439491228070176,0.0204576098049519,0.101981910681304,0.0271193114598805,-0.408286135693217,-1.7963598820059,-1.08050147492625,3.10739442688422,8.02074028632285,2.20188866544089],
            [0.372255172413793,-0.920055172413793,-0.0510206896551724,0.124935488824872,0.181061835429222,0.0566761320337474,1.16907042253521,-0.610838028169012,-0.0793521126760466,4.73185761874169,18.9515957234809,14.2562301142586],
            [0.135020202020202,-0.805570707070707,-0.529861111111111,0.0223281108487844,0.0945233887830513,0.0348944544209156,0.16638618925831,-1.34891304347826,-1.22841943734015,4.30575355783531,9.14535679439928,2.37509245875053],
            [0.383,-0.921185185185185,-0.0442296296296296,0.127382605446759,0.195020138660946,0.07037949332366,0.638838461538462,0.455476923076924,-0.873138461538456,5.28419306825959,18.9748872650269,19.1501045836752],
            [0.163832352941177,-0.899326470588235,-0.37655,0.0231364574211836,0.102172112665766,0.0285332759060064,0.0543571428571488,-0.431261904761906,-1.31439880952381,4.01282247480572,8.98916699889792,1.81624825560661],
            [0.393575163398693,-0.905692810457517,-0.0615555555555556,0.105704190803682,0.157196379099655,0.0451559147621652,-1.21002013422819,0.76881879194631,-0.156362416107384,8.00546054655294,14.6129777914682,15.8953186465014],
            [0.149941988950276,-0.86542817679558,-0.433629834254143,0.0220611830659517,0.0992340529527898,0.038608858938629,-0.460480446927377,-0.947907821229049,-0.732251396648045,4.39050879443168,8.63472371713322,1.9827695451468],
            [0.2419125,-0.96765625,-0.09544375,0.179674457136808,0.199887106266064,0.0728740471747893,-1.89975324675325,-0.432493506493512,-0.140084415584418,16.6433388095813,19.3424691896358,30.6735202504872],
            [0.170421593830334,-0.846331619537276,-0.459876606683805,0.0237157473355371,0.0957086657170801,0.034286567561985,-0.203054545454541,-0.91636103896104,-1.50135324675325,4.26585679118797,7.29216401437581,2.2955032534788],
            [0.350814285714286,-0.933757142857143,-0.10215,0.137479884696688,0.196368500979132,0.0523948525686802,0.537044776119402,-0.0899850746268638,-0.686649253731352,5.84467283297844,17.5015633266199,20.7465701018322],
            //HipFlex
            [0.145714932126697,-0.875230769230769,0.362303167420815,0.0237556427063202,0.127100791424507,0.0440674763442825,0.0363027522935713,-2.16227064220183,-1.53125229357798,6.30659403474402,7.54794648882104,1.42592677192407],
            [0.106222972972973,-0.953114864864865,0.102945945945946,0.125490841420441,0.240401990709364,0.130356324462626,1.30809027777777,-2.48150694444445,2.26077777777778,46.4143600492849,28.9350741546095,17.6762818685486],
            [0.158575971731449,-0.836692579505301,0.411469964664311,0.0448214272539906,0.118931316750321,0.0836365538280346,0.288028673835125,-1.07124731182796,0.150154121863798,8.24417987333283,10.8133042433698,2.68882004596102],
            [0.0959605263157895,-0.963802631578948,0.103677631578947,0.109902886084255,0.286203938115791,0.140188166570889,0.689612244897947,-1.96779591836735,-1.25040816326531,53.9126381564097,19.4744279820785,14.7756724584571],
            [0.141802371541502,-0.87101581027668,0.367193675889328,0.02398041820939,0.119605292221531,0.0410306897721833,-0.497907999999995,-2.19768,-0.968196,7.75025085565709,7.22856005776611,1.4653735959927],
            [0.0956031746031746,-0.963579365079365,0.176880952380952,0.100124737151882,0.232442497913254,0.138438959259687,1.35714876033058,-2.34555371900827,1.07901652892562,48.0588940809527,18.4871020524467,14.5591474300592],
            [0.140332089552239,-0.875011194029851,0.347884328358209,0.031442526245563,0.12015186948644,0.0613955745222812,0.32494318181818,-1.45491666666667,-0.645950757575757,9.40808286740796,10.1420114177687,2.37275470767476],
            [0.0923469387755102,-0.95469387755102,0.18108843537415,0.0817997645279171,0.22167691432193,0.109186362053782,-1.11822377622379,-2.33260839160839,2.41610489510489,37.9634370214773,19.4922368641991,9.64516217155193],
            [0.140665517241379,-0.879610344827587,0.336524137931034,0.0297389655026214,0.115928028964766,0.0560008990536965,0.00160350877192793,-0.761143859649123,-0.319414035087719,8.91606764925578,9.0419806442688,2.07636487293229],
            [0.0844932432432433,-0.965614864864864,0.11425,0.120361365708638,0.250886355217249,0.127520229564273,0.499541666666676,-2.40295833333333,1.53675694444445,42.63006202097,23.1419623861002,14.4681674015625],
            //Inner
            [0.974611111111111,-0.224680555555556,0.169986111111111,0.113004665604809,0.0121868149033866,0.0180716998575423,0.603147368421052,-0.722340350877193,-0.417571929824562,0.664498032986128,3.2556214255747,2.29431836261536],
            [0.633788461538462,-0.340326923076923,0.618038461538462,0.1528184694596,0.107164444309483,0.163039445268309,8.32725,-21.8181875,-15.4928958333333,5.45820327771492,16.3334552864284,8.20014299530028],
            [0.942780876494024,-0.240035856573705,0.263414342629482,0.118325767747492,0.0164221913478434,0.0316423864927019,0.319170731707317,-0.687130081300813,-0.612475609756096,0.840558832197757,3.76063945761617,3.57653824711593],
            [0.79879393939394,-0.106163636363636,0.474993939393939,0.174970628886827,0.0574257515772767,0.0655577500086493,2.28030625,-4.12444375,-1.113575,7.63508971070771,15.1584203591605,9.38245829404297],
            [0.96925,-0.233507692307692,0.182957692307692,0.11647254477508,0.0152375554521826,0.0243584555655646,0.505058823529411,-1.35856470588235,-0.572576470588236,0.796622160150011,3.22958101282858,2.30164248460976],
            [0.798210144927536,-0.163246376811594,0.498579710144928,0.155386610158122,0.0445353314034882,0.0687393555607199,1.04919402985074,-1.24620895522388,-0.556291044776125,5.31732112647551,14.5100431534879,8.29106166892591],
            [0.973,-0.229860082304527,0.181008230452675,0.119584442398349,0.0138829391797127,0.0258128023217116,0.34503781512605,-1.29021848739496,-0.546008403361341,0.55756985846399,2.87217661878991,2.5634510381674],
            [0.801811594202898,-0.181347826086956,0.496391304347826,0.153518445213012,0.0317897482104165,0.0600534199007382,1.35582575757576,-0.27590151515152,0.450931818181822,3.56746980727277,9.5042873092053,5.54838216508146],
            [0.966225190839695,-0.232904580152672,0.198419847328244,0.115662763968801,0.0146849551347034,0.0245639955480274,0.339209302325582,-1.3436511627907,-0.380395348837211,0.721811950316809,2.49983478029769,2.46388430693088],
            [0.704812030075188,-0.242894736842105,0.568285714285715,0.15560158238159,0.045640880932745,0.0713736901816136,-0.0128999999999994,-0.219415384615375,1.19448461538462,4.76039287725354,13.2020022186642,8.29584441348222],
            //Knee
            [0.194293333333333,-0.665346666666666,0.415926666666667,0.0287416094767853,0.109159115730741,0.0392963070349342,1.39167003367002,-2.5029797979798,-0.372606060606061,6.94015291313486,11.4098281116197,3.10781946119387],
            [0.187087412587413,-0.63170979020979,0.504055944055944,0.029309439433179,0.110125732094969,0.0310848663494178,0.56963475177304,-1.25074113475177,-0.137886524822696,8.40599079445471,7.07208309530706,2.26584397953984],
            [0.213372881355932,-0.606207627118644,0.515127118644067,0.0341922401218158,0.12346238976237,0.0326003873335841,2.11533766233766,-3.66525541125541,0.831160173160174,6.47114171368686,7.85554280963914,2.65794296202672],
            [0.180993883792049,-0.724162079510704,0.380620795107034,0.0291496856648809,0.107586356400614,0.0339034694389627,1.01945652173913,-0.934568322981366,-0.303403726708075,8.02238682799454,10.0963231396303,2.67655930688535],
            [0.221203007518797,-0.605285714285714,0.52603007518797,0.0348340111414006,0.116513388477137,0.0299229534846009,2.93262307692308,-1.98614615384615,-0.00260384615384574,6.38952585689713,8.09608133393801,1.55662798053741],
            [0.216017482517483,-0.690423076923077,0.422213286713287,0.0360680674955216,0.114011164236838,0.0320189718729309,1.31490714285714,-2.01589285714286,0.206542857142858,7.61339729177447,8.13455165425955,2.37487133021508],
            [0.191142857142857,-0.601605042016807,0.542197478991596,0.0336792168633145,0.121806982906216,0.0283382699287969,4.39384549356223,-2.08433905579399,-0.30224034334764,6.73134644754966,8.03687399114214,3.12295003078799],
            [0.189985454545454,-0.675163636363637,0.455305454545455,0.0350753457197978,0.112907069469493,0.0362310992521204,0.622507407407406,-0.925640740740741,-0.157388888888887,7.95109058895498,8.32783780839034,2.36472563051947],
            [0.186647260273973,-0.660993150684931,0.464431506849315,0.0285359735547599,0.109752254101528,0.0326563776206101,0.685771929824577,-1.48456140350877,-0.62838596491228,6.42351454626959,7.77327437946068,2.50092921838812],
            [0.201875968992248,-0.65112015503876,0.506806201550388,0.0346580591813664,0.122530270105703,0.047583215310973,1.19626482213439,-2.66026482213439,-0.159600790513835,9.7721675323467,8.82032394115933,2.95841081177971],
            //LegLift
            [-0.129455223880597,0.0418432835820896,0.968589552238807,0.047081539005095,0.0177299923032201,0.113206746630073,0.540781132075471,-1.46662264150944,-0.612430188679245,3.66868911755819,9.40039594081822,1.57954309127858],
            [-0.1024375,0.0782991071428573,0.972075892857143,0.0343912178574132,0.0172447796163456,0.124941046171406,0.430304545454546,-1.37135909090909,-0.582922727272728,3.22982610052303,6.1201214222014,1.36307555691734],
            [-0.108952662721894,0.107976331360947,0.96312426035503,0.0408609319450286,0.0197200902453374,0.147894051723959,0.694896341463415,-1.51511585365854,-0.35034756097561,4.22671488646885,9.20428655296081,1.36207774762353],
            [-0.125758793969849,0.126798994974874,0.952824120603015,0.0391987993508835,0.0208874179904335,0.132310237944216,1.17083673469388,-2.30915306122449,-0.650658163265306,4.46254853201477,6.29333463208199,1.69034977909966],
            [-0.116054794520548,0.141520547945205,0.950269406392694,0.0311168759499632,0.0151241186540733,0.129017248569812,1.29215492957746,-0.922338028169014,-0.573446009389671,3.23954022894707,5.88556361117397,1.27628040004415],
            [-0.135065789473684,0.0804342105263158,0.968947368421053,0.0384610668419902,0.0124574082850016,0.122628001708225,0.467385650224215,-1.80385650224215,-0.664170403587443,2.27103987273749,6.95988500503045,1.79857052231898],
            [-0.0882926829268293,0.0939207317073171,0.973457317073171,0.0267022801769627,0.0149194360919628,0.144829543290447,1.22928301886792,-1.48772955974843,-0.696798742138364,3.70705108069013,5.08142011858823,1.20378515479892],
            [-0.117023364485981,0.0820934579439253,0.96877570093458,0.0273230238522616,0.0157109421233496,0.12961438924169,0.375361904761906,0.272185714285714,-0.856547619047619,3.1876423825568,5.59247951651104,1.22158469949049],
            [-0.0948815165876778,0.0659431279620853,0.973710900473933,0.0365045593484871,0.0170520913270592,0.128996965288884,0.233033980582523,-1.15733009708738,-0.567300970873787,2.86511184518102,7.33098387446918,1.4922426525038],
            [-0.13165503875969,0.0568372093023256,0.97027519379845,0.0283174311313287,0.014317627443718,0.114315445730783,0.453239215686272,-0.821988235294118,-0.542447058823529,2.62288139256218,4.38290981138363,0.788229905613569]
        ]
        
        let trainingLabels = [
            //Heelslide labels
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            EnumerationClass.Excercise.Heelslide.rawValue,
            
            //HipAb labels
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            EnumerationClass.Excercise.HipAb.rawValue,
            
            //HipEx
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            EnumerationClass.Excercise.HipEx.rawValue,
            
            //HipFlex
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            EnumerationClass.Excercise.HipFlex.rawValue,
            
            //Inner
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            EnumerationClass.Excercise.Inner.rawValue,
            
            //Knee
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            EnumerationClass.Excercise.Knee.rawValue,
            
            //LegLift
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue,
            EnumerationClass.Excercise.LegLift.rawValue
        ]
        
        let testingData = [
            [0.279529832935561,-0.642899761336515,0.617250596658711,0.0344091681322862,0.0842043381366493,0.0359120012168738,0.0534830097087347,-0.936094660194174,-0.619968446601941,3.55473608770521,5.18479399513082,1.6144847367666]
        ]
        
        let machineLearningAl = EnumerationClass.MachineLearningAlgorithm.SVM
        
        let prediction = ["Heelslide"]
        
        XCTAssertEqual(util.applyMachineLearning(trainingData: trainingData, trainingLabels: trainingLabels, trainingOutput: nil, testingData: testingData, algo: machineLearningAl)!, prediction, "This is the test for machine learning")
    }
    
//    func testFilterOut() {
//        let axisVals = [[1.0, 2.0, 3.0],[2.0, 3.0, 4.0],[3.0, 4.0, 5.0],[4.0, 5.0, 6.0]]
//        
//        var expectedAxis = [[]]
//        
//        var filteredAxis = util.filterOut(data: axisVals, frequency: 1.0, sampleRate: 50)
//        
//        for i in 0..<expectedAxis.count {
//            XCTAssertEqual(filteredAxis[i], expectedAxis[i], "This is the result of filterout")
//        }
//    }
    
    func readCSV() {
        var dataArray = [AnyObject]()
        
        
        
    }
}
